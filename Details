import pandas as pd
import re

# Define regex patterns for each category
patterns = {
    "Source of Funds": [
        r"(?i)source of funds[:\-\?\s]*", r"(?i)sow summary[:\-\?\s]*",
        r"(?i)sow[:\-\?\s]*", r"(?i)\?source of funds\?", r"(?i)source[\s]*[\-\[\]]*"
    ],
    "Purpose of Funds": [
        r"(?i)purpose of these funds[:\-\?\s]*", r"(?i)pof[:\-\?\s]*", 
        r"(?i)wf/pof[:\-\?\s]*", r"(?i)purpose[:\-\?\s]*"
    ],
    "Where the Funds Have Come From": [
        r"(?i)where the funds have come from[:\-\?\s]*", r"(?i)wf[:\-\?\s]*", 
        r"(?i)bwwf[:\-\?\s]*"
    ],
    "Rationale": [
        r"(?i)rationale[:\-\?\s]*", r"(?i)r[:\-\?\s]*", 
        r"(?i)rationale why[\s\w]*[:\-\?\s]*"
    ]
}

def extract_statements(text, patterns):
    """
    Extracts statements after predefined expressions using regex.
    """
    extracted_data = {category: None for category in patterns.keys()}

    if not text or not isinstance(text, str):
        return extracted_data  # Return empty if no valid text

    for category, regex_list in patterns.items():
        for regex in regex_list:
            match = re.search(regex + r"(.*)", text, re.IGNORECASE)
            if match:
                extracted_data[category] = match.group(1).strip()
                break  # Stop at first match

    return extracted_data

# Sample DataFrame
data = {
    "comments": [
        "Source of funds: Cash held in USD account 00099. Where the funds have come from: Internal transfer from Wealth USD account into EDS account. Purpose of these funds: Transferred to NS&I for a better rate of interest. Rationale: We are comfortable with this transaction, funds originate from sale of Centessa shares which paid in USD into this account earlier this month.",
        "SOW: Proceeds from house sale. Origin: Transferred from joint account. Purpose: Used for buying investments. Rationale: Funds cleared as per compliance.",
        "Source: Monthly salary credited to account. Purpose of these funds: Savings for future investments.",
        "WF: Transferred from savings account. POF: Investment in stock market. Rationale: Advised by financial planner."
    ]
}

df = pd.DataFrame(data)

# Apply extraction function
results = df["comments"].apply(lambda x: extract_statements(x, patterns))

# Add extracted information as new columns dynamically
for category in patterns.keys():
    df[f"{category} Statement"] = results.apply(lambda x: x[category])

# Display DataFrame
import ace_tools as tools
tools.display_dataframe_to_user(name="Processed Commentary Data", dataframe=df)
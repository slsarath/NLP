st.markdown("### üõ°Ô∏è Controls Relevant to Top Incident Themes")

# Reuse theme_dict from earlier response (already parsed JSON)
if theme_dict:
    for dept, themes in theme_dict.items():
        incident_theme_list = list(themes.keys())

        # Join top 5 themes into a prompt-friendly string
        themes_string = ", ".join(incident_theme_list)

        control_prompt = (
            f"You are an expert in risk controls. For the department '{dept}', the top 5 incident themes are: "
            f"{themes_string}. Based on this, identify the relevant control measures in place. "
            f"Return the answer as a Markdown table with two columns: 'Incident Theme' and 'Relevant Control Description'."
        )

        response = client.chat.completions.create(
            model=deployment_name,
            messages=[
                {"role": "system", "content": "You map incident themes to internal controls."},
                {"role": "user", "content": control_prompt}
            ],
            temperature=0.3,
            max_tokens=700
        )

        st.markdown(f"#### üîê Controls for Department: **{dept}**")
        st.markdown(response.choices[0].message.content, unsafe_allow_html=True)
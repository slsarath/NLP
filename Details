# Function to apply the criteria
def categorize_row(row):
    reasons = []
    fail_score = 0

    def check_criteria(wordcount, rating, interlock_comments, rationale_type):
        local_reasons = []
        local_fail_score = 0

        if wordcount < 20:
            local_reasons.append(f"{rationale_type} word count less than 20")
            local_fail_score += 20
        if interlock_comments and wordcount < 50:
            local_reasons.append(f"{rationale_type} interlock comments detected with word count less than 50")
            local_fail_score += 20

        return local_reasons, local_fail_score

    # Check criteria for Finance Rationale
    finance_reasons, finance_fail_score = check_criteria(
        row['Finance Wordcount'],
        row['Finance Rating'],
        row['Finance Interlock comments'],
        'Finance'
    )
    reasons.extend(finance_reasons)
    fail_score += finance_fail_score

    # Check criteria for Non-Finance Rationale
    non_finance_reasons, non_finance_fail_score = check_criteria(
        row['Non-Finance Wordcount'],
        row['Non-Finance Rating'],
        row['Non-Finance Interlock comments'],
        'Non-Finance'
    )
    reasons.extend(non_finance_reasons)
    fail_score += non_finance_fail_score

    # Check if rationale are identical
    if row['Identical rationale'] == 'rationale are identical':
        reasons.append("Rationale are identical")
        fail_score += 20

    if reasons:
        return 'Bad', fail_score, ", ".join(reasons)
    else:
        return 'Good', 0, ""

# Apply the function to the DataFrame
df[['Category', 'Fail Score', 'Reasons']] = df.apply(lambda row: pd.Series(categorize_row(row)), axis=1)
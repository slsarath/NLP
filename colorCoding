from openpyxl.worksheet.pivot import TableRange, PivotTableCacheDefinition, PivotTableDefinition
from openpyxl.utils import get_column_letter


def process_and_save(input_file, exclusion_file, output_file, country, log_text):
    try:
        log_text.insert(tk.END, "Processing started...\n")

        # Load input and exclusion files
        excel_data = pd.ExcelFile(input_file)
        exclusion_list = pd.read_excel(exclusion_file)
        log_text.insert(tk.END, f"Loaded data for {country}...\n")

        # Define configurations for each country
        country_config = {
            "India": {"filter_team": True},
            "China": {"filter_team": False},
        }

        # Check if the selected country is valid
        if country not in country_config:
            raise ValueError(f"Configuration for {country} is not defined.")

        # Load the sheet for the selected country
        df = excel_data.parse(country)

        # Get configuration values
        filter_team = country_config[country]["filter_team"]
        current_date = datetime.now().date()

        # Step 1: Add raw data
        wb = Workbook()
        ws_raw = wb.create_sheet(title=f"{country} Raw Data")
        for r_idx, row in enumerate(dataframe_to_rows(df, index=False, header=True), start=1):
            for c_idx, value in enumerate(row, start=1):
                ws_raw.cell(row=r_idx, column=c_idx, value=value)

        # Step 2: Filter data
        filtered_df = filter_data(df, current_date, filter_team)
        ws_filtered = wb.create_sheet(title=f"{country} Filtered Data")
        for r_idx, row in enumerate(dataframe_to_rows(filtered_df, index=False, header=True), start=1):
            for c_idx, value in enumerate(row, start=1):
                ws_filtered.cell(row=r_idx, column=c_idx, value=value)

        # Step 3: Generate pivot tables
        ws_pivot = wb.create_sheet(title=f"{country} Pivot Tables")

        # Create actual pivot table for "Deceased"
        deceased_df = filtered_df[filtered_df["Deceased"] == "Yes"]
        if not deceased_df.empty:
            add_actual_pivot_table(
                wb,
                ws_pivot,
                title="Deceased Pivot Table",
                source_ws=ws_filtered,
                rows=["Team", "Banker"],
                filter_field="Deceased",
                filter_value="Yes",
                values={"Deceased": "count"},
                start_cell="A1",
            )

        # Create actual pivot table for "Current Status"
        breaches_df = filtered_df[filtered_df["Current Status"] == "Breach"]
        if not breaches_df.empty:
            add_actual_pivot_table(
                wb,
                ws_pivot,
                title="Breach Pivot Table",
                source_ws=ws_filtered,
                rows=["Team", "Banker"],
                filter_field="Current Status",
                filter_value="Breach",
                values={"Current Status": "count"},
                start_cell="A20",  # Add below the first pivot table
            )

        # Save the final workbook
        wb.save(output_file)
        log_text.insert(tk.END, f"Processing completed. Output saved to {output_file}\n")
    except Exception as e:
        log_text.insert(tk.END, f"Error: {e}\n")
        messagebox.showerror("Error", str(e))


def add_actual_pivot_table(wb, ws_pivot, title, source_ws, rows, filter_field, filter_value, values, start_cell):
    """
    Function to add an actual pivot table in Excel format.
    """
    # Define the range for the pivot table source
    min_row = 2  # Assuming header starts from row 1
    max_row = source_ws.max_row
    min_col = 1
    max_col = source_ws.max_column

    # Create a Pivot Cache
    cache = PivotTableCacheDefinition(
        source=TableRange(
            min_row=min_row,
            max_row=max_row,
            min_col=min_col,
            max_col=max_col,
            worksheet=source_ws.title,
        )
    )

    # Create the Pivot Table
    pivot_table = PivotTableDefinition(
        cache=cache,
        ref=start_cell,
        title=title,
    )

    # Add rows, values, and filters to the pivot table
    pivot_table.rows = rows
    pivot_table.values = values

    if filter_field and filter_value:
        pivot_table.filters = {filter_field: filter_value}

    # Add the pivot table to the worksheet
    ws_pivot.add_pivot_table(pivot_table)
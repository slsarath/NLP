# Read data from the Excel files
    event_id_df = pd.read_excel(new_sheet_file_path, sheet_name='new')
    cum_id_df = pd.read_excel(cumulative_file_path, sheet_name='Sheet1')

    # Ensure the Trade Event ID columns are strings
    event_id_df['Trade Event ID'] = event_id_df['Trade Event ID'].astype(str)
    cum_id_df['Trade Event ID'] = cum_id_df['Trade Event ID'].astype(str)

    # Create the Check column
    event_id_df['Check'] = event_id_df['Trade Event ID'].apply(
        lambda x: x if x in cum_id_df['Trade Event ID'].values else '#N/A')

    # Initialize Excel application
    excel = win32.gencache.EnsureDispatch("Excel.Application")
    excel.Visible = False
    excel.DisplayAlerts = False
    excel.AskToUpdateLinks = False

    # Open the workbook
    try:
        trade_id_wb = excel.Workbooks.Open(new_sheet_file_path)
    except Exception as e:
        print(f"Error opening workbook: {e}")
        excel.Quit()
        raise

    # Clear the 'new' sheet if it exists, or create it
    try:
        id_sheet = trade_id_wb.Sheets('new')
    except:
        id_sheet = trade_id_wb.Sheets.Add()
        id_sheet.Name = 'new'

    id_sheet.Cells.Clear()

    num_rows, num_cols = event_id_df.shape
    col_names = list(event_id_df.columns)
    data_values = event_id_df.values.tolist()

    # Writing column names and data to the sheet
    try:
        array_data = np.array(data_values)
        id_sheet.Range(f"A1:{chr(65 + num_cols - 1)}1").Value = [col_names]
        id_sheet.Range(f"A2:{chr(65 + num_cols - 1)}{num_rows + 1}").Value = array_data
    except Exception as e:
        print(f"Error during data writing: {e}")
        # Handle specific NaT error
        array_data = np.array([[None if pd.isna(x) else x for x in row] for row in data_values])
        id_sheet.Range(f"A2:{chr(65 + num_cols - 1)}{num_rows + 1}").Value = array_data

    # Add STR Final Sheet
    try:
        str_final_sheet = trade_id_wb.Sheets.Add(After=trade_id_wb.Sheets(trade_id_wb.Sheets.Count))
        str_final_sheet.Name = STR_sheet_name

        # Insert column names into the first row
        for i, col_name in enumerate(col_names, 1):
            str_final_sheet.Cells(1, i).Value = col_name

        # Insert data into subsequent rows
        for row_num, row_data in enumerate(data_values, 2):
            for col_num, cell_value in enumerate(row_data, 1):
                str_final_sheet.Cells(row_num, col_num).Value = cell_value

    except Exception as e:
        print(f"Error during copying to STRFinal sheet: {e}")

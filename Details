import pandas as pd

# Sample DataFrame with a column 'model_output'
data = {
    'model_output': [
        [('failure to follow procedure', 0.49871835112571716), 
         ('resulting from erroneous payments due to gap in the process', 0.4939565062522888), 
         ('staff error', 0.4927155375480652)],
        [('no error', 0.0)],
        []  # Empty list to check for edge cases
    ]
}

df = pd.DataFrame(data)

def extract_erroneous_tuple(semantics):
    """
    Loop through a list of tuples and return the first tuple
    whose phrase contains 'erroneous' (case-insensitive).
    If not found, return (None, None).
    """
    if not semantics:
        return (None, None)  # Handle empty lists safely
    
    for phrase, score in semantics:
        if "erroneous" in phrase.lower():
            return phrase, score  # Return the erroneous phrase and score
    
    return (None, None)  # Return a tuple of (None, None) if no erroneous phrase is found

# Apply the function and create two new columns, handling the unpacking
df['Erroneous Phrase'], df['Erroneous Similarity Score'] = zip(*df['model_output'].apply(extract_erroneous_tuple))

print(df)
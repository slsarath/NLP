import re
import pandas as pd
from dateutil import parser

# Sample DataFrame with extracted narrative values
data = {'Narrative Extracted': [
    'March 23, June 23, September 23, 2023',
    '04 2023',
    'Q3',
    '2024',
    'Q2 2023',
    '2023, 2022',
    'Q1 2023, Q3 2023',
    'Q1 2024, Q2 2024, Q3 2024',
    'May 24',
    'Q2 2025',
]}

df = pd.DataFrame(data)

# Function to convert month/year or quarter/year to standard format YYYYQn
def process_narrative(text):
    quarter_years = []

    # Pattern for months like "March 23" or "May 24"
    month_pattern = r'(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)[a-z]*\s?\d{2}'
    # Pattern for "Q" references like "Q3" or "Q3 2023"
    quarter_pattern = r'(Q[1-4])\s?(\d{4})?'
    # Pattern for year only like "2023"
    year_pattern = r'\b\d{4}\b'

    # Find all month-based references
    months = re.findall(month_pattern, text)
    for month_ref in months:
        # Parse the date and determine the quarter
        try:
            date_obj = parser.parse(month_ref)
            quarter = (date_obj.month - 1) // 3 + 1  # Get quarter from month
            quarter_years.append(f"{date_obj.year}Q{quarter}")
        except:
            continue

    # Find all quarter-based references
    quarters = re.findall(quarter_pattern, text)
    for q, year in quarters:
        if not year:
            year = "2023"  # Default to current year if year is missing
        quarter_years.append(f"{year}{q}")

    # Find all standalone year references
    years = re.findall(year_pattern, text)
    for year in years:
        # Assume Q4 for standalone years, as it's the latest quarter
        quarter_years.append(f"{year}Q4")

    # Sort quarter references and keep only the latest one
    if quarter_years:
        latest_quarter = max(quarter_years)
        return latest_quarter
    return "No Date/Quarter Found"

# Apply the function to the DataFrame
df['Latest Quarter Reference'] = df['Narrative Extracted'].apply(process_narrative)

# Output the DataFrame to check the results
print(df)